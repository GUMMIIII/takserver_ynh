#!/bin/bash

set -e

# YunoHost helper laden
source /usr/share/yunohost/helpers

# Variablen
domain=${YNH_APP_ARG_DOMAIN}
path=${YNH_APP_ARG_PATH}
deb_path=${YNH_APP_ARG_DEB_PATH}
ca_name=${YNH_APP_ARG_CA_NAME}
signing_ca_name=${YNH_APP_ARG_SIGNING_CA_NAME}
org=${YNH_APP_ARG_ORG}
state=${YNH_APP_ARG_STATE}
city=${YNH_APP_ARG_CITY}
orgunit=${YNH_APP_ARG_ORGANIZATIONAL_UNIT}
install_dir="/opt/tak"

# Abhängigkeiten installieren
ynh_print_info "Installiere Abhängigkeiten (Java, PostgreSQL, LDAP tools, etc.)..."
apt-get update
apt-get install -y openjdk-17-jre postgresql postgresql-client ldap-utils

# Datei-Limits für Java setzen (idempotent)
ynh_print_info "Setze Datei-Limits für Java..."
grep -q 32768 /etc/security/limits.conf || echo '* soft nofile 32768' >> /etc/security/limits.conf

# TAK Server .deb installieren
ynh_print_info "Installiere TAK Server .deb..."
dpkg -i "$deb_path"

# Zugriffsrechte
chown -R tak:tak /opt/tak/certs/
chmod -R u+rwX /opt/tak/certs/

# PKI Umgebung initialisieren
ynh_print_info "Initialisiere PKI Umgebung und Zertifikate..."
su - tak -c "
  export STATE='$state'
  export CITY='$city'
  export ORGANIZATIONAL_UNIT='$orgunit'
  export ORGANIZATION='$org'
  export CAPASS='atakatak'
  export PASS='atakatak'
  cd /opt/tak/certs
  sed -i 's/^ORGANIZATION=.*/ORGANIZATION=\"$org\"/' cert-metadata.sh
  ./makeRootCa.sh --ca-name \"$ca_name\"
  ./makeCert.sh ca \"$signing_ca_name\"
  ./makeCert.sh server takserver
"

# CoreConfig anpassen
ynh_print_info "Passe CoreConfig an..."
CA_SIGNING_NAME="$signing_ca_name"
su - tak -c "cd /opt/tak && sed -i 's/truststore-root/truststore-'"$CA_SIGNING_NAME"'/g' CoreConfig.example.xml"
if [ -f /opt/tak/CoreConfig.example.xml ]; then
    cp /opt/tak/CoreConfig.example.xml /opt/tak/CoreConfig.xml
fi

# TAK-Server-Service aktivieren und starten
ynh_print_info "Aktiviere und starte TAK Service..."
systemctl enable takserver.service
systemctl start takserver.service

# --- NGINX Konfiguration ---
ynh_print_info "Richte Nginx Reverse Proxy ein..."
nginx_conf="/etc/nginx/conf.d/${domain}.conf"

# NGINX location-Block für Root (/) anlegen
cat > "/etc/nginx/conf.d/${domain}.d/takserver.conf" <<EOL
location / {
    proxy_pass https://localhost:8443/;
    proxy_set_header Host \$host;
    proxy_set_header X-Real-IP \$remote_addr;
    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto \$scheme;
    proxy_ssl_verify off;
    proxy_http_version 1.1;
    proxy_set_header Upgrade \$http_upgrade;
    proxy_set_header Connection "upgrade";
}
EOL

# Automatisches Include-Patching für Root-Installationen
tak_include="include /etc/nginx/conf.d/${domain}.d/*.conf;"
if grep -qF "$tak_include" "$nginx_conf"; then
    sed -i "\|$tak_include|d" "$nginx_conf"
fi

awk -v inc="$tak_include" '
    /server_name/ { print; getline; print; print inc; next }
    { print }
' "$nginx_conf" > "${nginx_conf}.patched" && mv "${nginx_conf}.patched" "$nginx_conf"

# nginx reload
nginx -t && systemctl reload nginx

# --- (Optional) LDAP Auto-Kopplung Placeholder ---
ynh_print_info "Hinweis: LDAP-Integration ist (noch) nicht automatisiert verbunden. Bitte ggf. manuell prüfen."

ynh_print_info "TAK Server erfolgreich installiert! WebUI: https://${domain}/"
